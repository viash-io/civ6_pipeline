functionality:
  name: "dump_decompressed"
  namespace: "civ6_save_renderer"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input"
    alternatives:
    - "-i"
    description: "A Civ6 save file."
    example:
    - "save.Civ6Save"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives:
    - "-o"
    description: "Where to store the binary decompressed output."
    example:
    - "output.bin"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "javascript_script"
    path: "script.js"
    is_executable: true
  - type: "file"
    path: "../parse_map/helper.js"
  description: "Dump the decompressed binary data from a Civ6Save file."
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "node:18-buster"
  target_organization: "viash-io/civ6_pipeline"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/viash-io/civ6_pipeline"
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
- type: "native"
  id: "native"
info:
  config: "/home/runner/work/civ6_pipeline/civ6_pipeline/src/civ6_save_renderer/dump_decompressed/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/civ6_pipeline/civ6_pipeline/target/nextflow/civ6_save_renderer/dump_decompressed"
  executable: "/home/runner/work/civ6_pipeline/civ6_pipeline/target/nextflow/civ6_save_renderer/dump_decompressed/dump_decompressed"
  viash_version: "0.7.3"
  git_commit: "c06d0466099674e64efb4473f0792d6ae944645a"
  git_remote: "https://github.com/viash-io/civ6_pipeline"
